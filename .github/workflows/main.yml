# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Create Release
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      
      - name: Setup MATLAB
        # You may pin to the exact commit or the version.
        # uses: matlab-actions/setup-matlab@5b825d0ad4205ef03dc40ba3b24cad22674e9ca3
        uses: matlab-actions/setup-matlab@v1.2.4

      - name: Run MATLAB Command
        # You may pin to the exact commit or the version.
        # uses: matlab-actions/run-command@f382a74238a17f55e04b4c8b55b85e49d537b6e5
        uses: matlab-actions/run-command@v1.1.3
        with:
          # Script, function, or statement to execute
          command: pcode test_file.m
      
      - name: Print dir content
        run: cd ${GITHUB_WORKSPACE} && ls -a
        
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${GITHUB_WORKSPACE}/test_file.p
          asset_name: test_file.p
          asset_content_type: application/octet-stream
